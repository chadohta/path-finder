(this["webpackJsonppath-finder"]=this["webpackJsonppath-finder"]||[]).push([[0],[,,,,,,,,,function(e,t,n){e.exports=n(19)},,,,,function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";n.r(t);var a=n(0),i=n.n(a),o=n(8),r=n.n(o),s=(n(14),n(15),n(1)),l=n(6),c=n(2),u=n(3),h=n(5),d=n(4),f=(n(16),n(17),function(e){Object(h.a)(n,e);var t=Object(d.a)(n);function n(){return Object(c.a)(this,n),t.apply(this,arguments)}return Object(u.a)(n,[{key:"render",value:function(){var e=this.props,t=e.col,n=e.row,a=e.isStart,o=e.isFinish,r=e.isWall,s=e.onMouseDown,l=e.onMouseEnter,c=e.onMouseUp,u=o?"node-finish":a?"node-start":r?"node-wall":"";return i.a.createElement("div",{id:"node-".concat(n,"-").concat(t),className:"node ".concat(u),onMouseDown:function(){return s(n,t)},onMouseEnter:function(){return l(n,t)},onMouseUp:function(){return c()}})}}]),n}(a.Component));function m(e){var t,n=[],a=Object(s.a)(e);try{for(a.s();!(t=a.n()).done;){var i,o=t.value,r=Object(s.a)(o);try{for(r.s();!(i=r.n()).done;){var l=i.value;n.push(l)}}catch(c){r.e(c)}finally{r.f()}}}catch(c){a.e(c)}finally{a.f()}return n}function v(e,t){var n=[],a=e.col,i=e.row;return a>0&&n.push(t[i][a-1]),i<t.length-1&&n.push(t[i+1][a]),a<t[0].length-1&&n.push(t[i][a+1]),i>0&&n.push(t[i-1][a]),n.filter((function(e){return!e.isWall}))}function p(e){for(var t=[],n=e;null!==n;)t.unshift(n),n=n.previousNode;return t}function g(e,t){return Math.abs(e.col-t.col)+Math.abs(e.row-t.row)}function E(e,t){var n,a=v(e,t).filter((function(e){return!e.isVisited})),i=Object(s.a)(a);try{for(i.s();!(n=i.n()).done;){var o=n.value;o.distance=e.distance+1,o.previousNode=e}}catch(r){i.e(r)}finally{i.f()}}function y(e,t,n){var a,i=v(e,t).filter((function(e){return!e.isVisited})),o=Object(s.a)(i);try{for(o.s();!(a=o.n()).done;){var r=a.value;r.distance=g(r,n),r.previousNode=e}}catch(l){o.e(l)}finally{o.f()}}function b(e,t,n,a){var i,o=v(e,t),r=Object(s.a)(o);try{for(r.s();!(i=r.n()).done;){var l=i.value,c=e.distance+1;c<l.distance&&(l.previousNode=e,l.distance=c,l.fScore=c+g(l,n),a.includes(l)||a.push(l))}}catch(u){r.e(u)}finally{r.f()}}n(18);var w=function(e){Object(h.a)(n,e);var t=Object(d.a)(n);function n(){var e;Object(c.a)(this,n);for(var a=arguments.length,i=new Array(a),o=0;o<a;o++)i[o]=arguments[o];return(e=t.call.apply(t,[this].concat(i))).state={},e}return Object(u.a)(n,[{key:"render",value:function(){return i.a.createElement("div",null,i.a.createElement("h2",null," What is Pathfinding? "),i.a.createElement("p",null,"This application visualizes various pathfinding algorithms. A pathfinding algorithm is essentially trying to find the shortest path between two points. While some algorithms are guaranteed to find the shortest possible path, others are not. Below are descriptions of each algorithm implemented in this application."),i.a.createElement("h2",null," The Algorithms "),i.a.createElement("div",{className:"alg-description-1"},i.a.createElement("h4",null," Depth-First Search (DFS) "),i.a.createElement("p",{className:"alg-des-italic"}," unweighted "),i.a.createElement("p",{className:"alg-des"},"Explores as far as possible until hitting the end of the grid, a wall, or an already visited node before changing direction."),i.a.createElement("p",null,"does not guarantee shortest path")),i.a.createElement("div",{className:"alg-description-1"},i.a.createElement("h4",null," Breadth-First Search (BFS) "),i.a.createElement("p",{className:"alg-des-italic"}," unweighted (can be weighted) "),i.a.createElement("p",{className:"alg-des"},"Explores all neighbors of the start node then continues to explore the neighbors of those nodes and so on until it finds the target node."),i.a.createElement("p",null,"guarantees shortest path")),i.a.createElement("div",{className:"alg-description-1"},i.a.createElement("h4",null," Dijkstra's Algorithm "),i.a.createElement("p",{className:"alg-des-italic"}," weighted "),i.a.createElement("p",{className:"alg-des"},"Explores all neighbors of the start node and moves to the neighbor with the lowest cost. In this case, since each neighbor node has an equal cost of 1, it will move to the node explored first. For this implementation that order is up, right, down, left."),i.a.createElement("p",null,"guarantees shortest path")),i.a.createElement("div",{className:"alg-description-1"},i.a.createElement("h4",null," Greedy Search "),i.a.createElement("p",{className:"alg-des-italic"}," weighted "),i.a.createElement("p",{className:"alg-des"},"Uses a heuristic function to estimate the cost of the cheapest path from start node to destination node. Essentially, it will explore neighbors and continuously move to the node that is closest to the destination node. This does not always lead to the optimal path."),i.a.createElement("p",null,"does not guarantee shortest path")),i.a.createElement("div",{className:"alg-description-1"},i.a.createElement("h4",null," A* (A-Star) Search "),i.a.createElement("p",{className:"alg-des-italic"}," weighted "),i.a.createElement("p",{className:"alg-des"},"When deciding which direction to go, the A-Star algorithm considers both the cost from the current node any neighbor node (like Dijkstras) along with the distance from those neighbor nodes to the destination node (like Greedy) to predict which neighbor node would be the best move. This results in an algorithm that is much faster than Dijkstras but still guarantees the shortest path. This is one of the best pathfinding algorithms."),i.a.createElement("p",null,"guarantees shortest path")),i.a.createElement("h3",null," Calculating Distance "),i.a.createElement("p",null,"For weighted algorithms this application uses manhattan distance to calculate cost. Each movement from one node to a neighboring node has a cost or weight of 1."))}}]),n}(a.Component),k=function(e){Object(h.a)(n,e);var t=Object(d.a)(n);function n(){var e;Object(c.a)(this,n);for(var a=arguments.length,i=new Array(a),o=0;o<a;o++)i[o]=arguments[o];return(e=t.call.apply(t,[this].concat(i))).state={grid:[],mouseIsPressed:!1},e}return Object(u.a)(n,[{key:"componentDidMount",value:function(){this.createGrid()}},{key:"createGrid",value:function(){for(var e=[],t=0;t<20;t++){for(var n=[],a=0;a<40;a++)n.push(this.createNode(a,t));e.push(n)}this.setState({grid:e})}},{key:"createNode",value:function(e,t){return{col:e,row:t,distance:1/0,fScore:1/0,previousNode:null,isStart:4===t&&4===e,isFinish:15===t&&35===e,isWall:!1,isVisited:!1}}},{key:"handleMouseDown",value:function(e,t){var n=this.getNewGridWithWallToggled(this.state.grid,e,t);this.setState({grid:n,mouseIsPressed:!0})}},{key:"handleMouseEnter",value:function(e,t){if(this.state.mouseIsPressed){var n=this.getNewGridWithWallToggled(this.state.grid,e,t);this.setState({grid:n})}}},{key:"handleMouseUp",value:function(){this.setState({mouseIsPressed:!1})}},{key:"getNewGridWithWallToggled",value:function(e,t,n){var a=e.slice(),i=a[t][n],o=Object(l.a)(Object(l.a)({},i),{},{isWall:!i.isWall});return a[t][n]=o,a}},{key:"lockButtons",value:function(){document.querySelectorAll("button").forEach((function(e){e.disabled=!0}))}},{key:"unlockSearchButtons",value:function(){document.querySelectorAll(".searchBtn").forEach((function(e){e.disabled=!1}))}},{key:"unlockResetButtons",value:function(){document.querySelectorAll(".resetBtn").forEach((function(e){e.disabled=!1}))}},{key:"visualizeDijkstra",value:function(){this.lockButtons();var e=this.state.grid,t=e[4][4],n=e[15][35],a=function(e,t,n){var a=[];t.distance=0;for(var i=m(e);i.length>0;){i.sort((function(e,t){return e.distance-t.distance}));var o=i.shift();if(o.distance===1/0)return a;if(o.isVisited=!0,a.push(o),o===n)return a;E(o,e)}}(e,t,n),i=p(n);this.animateExploration(a,i,30),console.log(e)}},{key:"visualizeGreedy",value:function(){this.lockButtons();var e=this.state.grid,t=e[4][4],n=e[15][35],a=function(e,t,n){var a=[],i=m(e);for(t.distance=g(t,n);i.length>0;){i.sort((function(e,t){return e.distance-t.distance}));var o=i.shift();if(o.distance===1/0)return a;if(o.isVisited=!0,a.push(o),o===n)return a;y(o,e,n)}}(e,t,n),i=p(n);this.animateExploration(a,i,30)}},{key:"visualizeAStar",value:function(){this.lockButtons();var e=this.state.grid,t=e[4][4],n=e[15][35],a=function(e,t,n){var a=[],i=[];for(t.distance=0,t.fScore=g(t,n),i.push(t);i.length>0;){i.sort((function(e,t){return e.fScore-t.fScore}));var o=i.shift();if(a.push(o),o===n)return a;b(o,e,n,i)}return a}(e,t,n),i=p(n);this.animateExploration(a,i,30)}},{key:"visualizeBFS",value:function(){this.lockButtons();var e=this.state.grid,t=e[4][4],n=e[15][35],a=function(e,t,n){var a=[];a.push(t),t.isVisited=!0;for(var i=[];a.length>0;){var o=a.shift();if(i.push(o),o===n)return i;var r,l=v(o,e).filter((function(e){return!e.isVisited})),c=Object(s.a)(l);try{for(c.s();!(r=c.n()).done;){var u=r.value;u.isVisited=!0,u.previousNode=o,a.push(u)}}catch(h){c.e(h)}finally{c.f()}}return i}(e,t,n),i=p(n);this.animateExploration(a,i,30)}},{key:"visualizeDFS",value:function(){this.lockButtons();var e=this.state.grid,t=e[4][4],n=e[15][35],a=function(e,t,n){var a=[],i=[];for(a.push(t);a.length>0;){var o=a.pop();if(o.isVisited=!0,i.push(o),o===n)return i;var r,l=v(o,e).filter((function(e){return!e.isVisited})),c=Object(s.a)(l);try{for(c.s();!(r=c.n()).done;){var u=r.value;u.previousNode=o,a.push(u)}}catch(h){c.e(h)}finally{c.f()}}return i}(e,t,n),i=p(n);this.animateExploration(a,i,30)}},{key:"animateExploration",value:function(e,t,n){for(var a=this,i=function(i){if(i===e.length-1)return setTimeout((function(){a.animatePath(t,n)}),10*i),{v:void 0};setTimeout((function(){var t=e[i];document.getElementById("node-".concat(t.row,"-").concat(t.col)).className="node node-visited"}),10*i)},o=1;o<=e.length-1;o++){var r=i(o);if("object"===typeof r)return r.v}}},{key:"animatePath",value:function(e,t){for(var n=this,a=function(n){setTimeout((function(){var t=e[n];document.getElementById("node-".concat(t.row,"-").concat(t.col)).className="node node-path"}),t*n)},i=1;i<e.length-1;i++)a(i);setTimeout((function(){n.unlockResetButtons()}),t*e.length)}},{key:"resetGrid",value:function(){var e=this;this.createGrid(),setTimeout((function(){e.resetNodeColor()}),250)}},{key:"resetGridKeepWalls",value:function(){for(var e=this.state.grid.slice(),t=0;t<e.length;t++)for(var n=0;n<e[0].length;n++){var a=e[t][n],i=Object(l.a)(Object(l.a)({},a),{},{distance:1/0,fScore:1/0,previousNode:null,isVisited:!1});e[t][n]=i}this.setState({grid:e}),this.resetNodeColor()}},{key:"resetNodeColor",value:function(){var e,t=this,n=[],a=Object(s.a)(this.state.grid);try{for(a.s();!(e=a.n()).done;){var i,o=e.value,r=Object(s.a)(o);try{for(r.s();!(i=r.n()).done;){var l=i.value;n.push(l)}}catch(h){r.e(h)}finally{r.f()}}}catch(h){a.e(h)}finally{a.f()}for(var c=function(e){setTimeout((function(){var t=n[e];t.isStart?document.getElementById("node-".concat(t.row,"-").concat(t.col)).className="node node-start":t.isFinish?document.getElementById("node-".concat(t.row,"-").concat(t.col)).className="node node-finish":t.isWall?document.getElementById("node-".concat(t.row,"-").concat(t.col)).className="node node-wall":document.getElementById("node-".concat(t.row,"-").concat(t.col)).className="node"}),1*e)},u=0;u<n.length;u++)c(u);setTimeout((function(){t.unlockSearchButtons()}),n.length)}},{key:"render",value:function(){var e=this,t=this.state,n=t.grid,a=t.mouseIsPressed;return i.a.createElement("div",null,i.a.createElement("h1",null," Pathfinding Visualizer "),i.a.createElement("button",{className:"searchBtn",onClick:function(){return e.visualizeDFS()}},"Depth-First Search"),i.a.createElement("button",{className:"searchBtn",onClick:function(){return e.visualizeBFS()}},"Breadth-First Search"),i.a.createElement("button",{className:"searchBtn",onClick:function(){return e.visualizeDijkstra()}},"Dijkstra's Algorithm"),i.a.createElement("button",{className:"searchBtn",onClick:function(){return e.visualizeGreedy()}},"Greedy Search"),i.a.createElement("button",{id:"aStarBtn",className:"searchBtn",onClick:function(){return e.visualizeAStar()}},"A-Star Search"),i.a.createElement("div",{className:"grid"},n.map((function(t,n){return i.a.createElement("div",{key:n},t.map((function(t,n){var o=t.row,r=t.col,s=t.isStart,l=t.isFinish,c=t.isWall;return i.a.createElement(f,{key:n,col:r,row:o,isStart:s,isFinish:l,isWall:c,mouseIsPressed:a,onMouseDown:function(t,n){return e.handleMouseDown(t,n)},onMouseEnter:function(t,n){return e.handleMouseEnter(t,n)},onMouseUp:function(){return e.handleMouseUp()}})})))}))),i.a.createElement("button",{className:"resetBtn",onClick:function(){return e.resetGrid()}},"Reset Grid"),i.a.createElement("button",{id:"resetBtnTwo",className:"resetBtn",onClick:function(){return e.resetGridKeepWalls()}},"Reset Grid Keep Walls"),i.a.createElement("p",{style:{fontStyle:"italic"}},"Add walls by clicking and holding down your left mouse button while moving it around the grid. To clear a wall left-click it."),i.a.createElement("div",{className:"instruction-wrapper"},i.a.createElement(w,null)))}}]),n}(a.Component);var N=function(){return i.a.createElement("div",{className:"App"},i.a.createElement(k,null))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(i.a.createElement(i.a.StrictMode,null,i.a.createElement(N,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}],[[9,1,2]]]);
//# sourceMappingURL=main.61fe9129.chunk.js.map